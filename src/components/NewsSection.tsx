'use client';

import { useState } from 'react';
import Image from 'next/image';

const newsData = [
  {
    id: '1',
    title: '–ù–æ–≤—ã–π —Ç—Ä–µ–Ω–µ—Ä –≤ –∫–æ–º–∞–Ω–¥–µ JAB',
    excerpt: '–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –ø–æ –±–æ–∫—Å—É —Å 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å–ø–æ—Ä—Ç–µ.',
    content: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ —Ç—Ä–µ–Ω–µ—Ä–æ–≤. –û–Ω –∏–º–µ–µ—Ç –∑–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ —Å–ø–æ—Ä—Ç–∞ –ø–æ –±–æ–∫—Å—É –∏ –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–π –æ–ø—ã—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤ —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è.',
    image: 'https://picsum.photos/400/250?random=1',
    date: '2024-01-15',
    category: '–ö–æ–º–∞–Ω–¥–∞',
    author: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è JAB',
    isHot: true,
    reactions: {
      like: 24,
      love: 8,
      fire: 15,
      clap: 12
    }
  },
  {
    id: '2',
    title: '–¢—É—Ä–Ω–∏—Ä –ø–æ –±–æ–∫—Å—É —Å—Ä–µ–¥–∏ –ª—é–±–∏—Ç–µ–ª–µ–π',
    excerpt: '–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—à–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º —Ç—É—Ä–Ω–∏—Ä–µ –ø–æ –±–æ–∫—Å—É.',
    content: '–¢—É—Ä–Ω–∏—Ä –ø—Ä–æ–π–¥–µ—Ç 25 —è–Ω–≤–∞—Ä—è –≤ –Ω–∞—à–µ–º –∑–∞–ª–µ. –£—á–∞—Å—Ç–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –¥–ª—è –≤—Å–µ—Ö —á–ª–µ–Ω–æ–≤ –∫–ª—É–±–∞. –ü—Ä–∏–∑—ã –∏ –Ω–∞–≥—Ä–∞–¥—ã –¥–ª—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π!',
    image: 'https://picsum.photos/400/250?random=2',
    date: '2024-01-10',
    category: '–°–æ–±—ã—Ç–∏—è',
    author: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã',
    isHot: false,
    reactions: {
      like: 18,
      love: 5,
      fire: 8,
      clap: 6
    }
  },
  {
    id: '3',
    title: '–ù–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –≤ –∑–∞–ª–µ',
    excerpt: '–ú—ã –æ–±–Ω–æ–≤–∏–ª–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –≤ –Ω–∞—à–µ–º –∑–∞–ª–µ –¥–ª—è –µ—â–µ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.',
    content: '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –±–æ–∫—Å–µ—Ä—Å–∫–∏–µ –º–µ—à–∫–∏, –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Ä–∏–Ω–≥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∫–∞—Ä–¥–∏–æ-–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ.',
    image: 'https://picsum.photos/400/250?random=3',
    date: '2024-01-05',
    category: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
    author: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Å–ª—É–∂–±–∞',
    isHot: false,
    reactions: {
      like: 12,
      love: 3,
      fire: 4,
      clap: 7
    }
  },
  {
    id: '4',
    title: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –æ—Ç —á–µ–º–ø–∏–æ–Ω–∞',
    excerpt: '–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –Ω–∞ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –æ—Ç –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ —á–µ–º–ø–∏–æ–Ω–∞ –†–æ—Å—Å–∏–∏ –ø–æ –±–æ–∫—Å—É.',
    content: '–£–Ω–∏–∫–∞–ª—å–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç—ã –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞ –≤—ã—Å—à–µ–≥–æ —É—Ä–æ–≤–Ω—è. –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å —Å–æ—Å—Ç–æ–∏—Ç—Å—è 30 —è–Ω–≤–∞—Ä—è.',
    image: 'https://picsum.photos/400/250?random=4',
    date: '2024-01-08',
    category: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã',
    author: '–ü—Ä–µ—Å—Å-—Å–ª—É–∂–±–∞',
    isHot: false,
    reactions: {
      like: 31,
      love: 12,
      fire: 22,
      clap: 15
    }
  }
];

const categories = [
  { id: 'all', name: '–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏' },
  { id: '–ö–æ–º–∞–Ω–¥–∞', name: '–ö–æ–º–∞–Ω–¥–∞' },
  { id: '–°–æ–±—ã—Ç–∏—è', name: '–°–æ–±—ã—Ç–∏—è' },
  { id: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', name: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ' },
  { id: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã', name: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã' }
];

export default function NewsSection() {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedNews, setSelectedNews] = useState<string | null>(null);
  const [userReactions, setUserReactions] = useState<{[key: string]: string}>({});

  const filteredNews = selectedCategory === 'all' 
    ? newsData 
    : newsData.filter(item => item.category === selectedCategory);

  const getCategoryColor = (category: string) => {
    switch (category) {
      case '–ö–æ–º–∞–Ω–¥–∞':
        return 'bg-blue-500/20 text-blue-300 border-blue-500/30';
      case '–°–æ–±—ã—Ç–∏—è':
        return 'bg-red-500/20 text-red-300 border-red-500/30';
      case '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ':
        return 'bg-green-500/20 text-green-300 border-green-500/30';
      case '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã':
        return 'bg-purple-500/20 text-purple-300 border-purple-500/30';
      default:
        return 'bg-gray-500/20 text-gray-300 border-gray-500/30';
    }
  };

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    });
  };

  const handleReaction = (newsId: string, reactionType: string) => {
    setUserReactions(prev => {
      const currentReaction = prev[newsId];
      if (currentReaction === reactionType) {
        // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ —Ç—É –∂–µ —Ä–µ–∞–∫—Ü–∏—é, —É–±–∏—Ä–∞–µ–º –µ—ë
        const newReactions = { ...prev };
        delete newReactions[newsId];
        return newReactions;
      } else {
        // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –¥—Ä—É–≥—É—é —Ä–µ–∞–∫—Ü–∏—é, –∑–∞–º–µ–Ω—è–µ–º
        return { ...prev, [newsId]: reactionType };
      }
    });
  };

  return (
    <section className="py-20 relative overflow-hidden">
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute inset-0 pointer-events-none">
        {/* –ö—Ä–∞—Å–Ω—ã–µ –∏ —Å–∏–Ω–∏–µ –∫—Ä—É–≥–∏ */}
        <div className="absolute top-20 left-10 w-32 h-32 bg-red-500/10 rounded-full animate-pulse"></div>
        <div className="absolute top-40 right-20 w-24 h-24 bg-blue-500/10 rounded-full animate-pulse" style={{animationDelay: '1s'}}></div>
        <div className="absolute bottom-20 left-1/4 w-20 h-20 bg-red-500/10 rounded-full animate-pulse" style={{animationDelay: '2s'}}></div>
        <div className="absolute bottom-40 right-1/3 w-28 h-28 bg-blue-500/10 rounded-full animate-pulse" style={{animationDelay: '0.5s'}}></div>
        
        {/* –ë–µ–ª—ã–µ –ª–∏–Ω–∏–∏ */}
        <div className="absolute top-1/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-white/20 to-transparent"></div>
        <div className="absolute bottom-1/4 left-0 w-full h-px bg-gradient-to-r from-transparent via-white/20 to-transparent"></div>
      </div>

      <div className="container mx-auto px-4 relative z-10">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
        <div className="text-center mb-16">
          <h2 className="hero-jab-title text-4xl md:text-6xl font-bold text-white mb-6">
            <span className="text-transparent bg-clip-text bg-gradient-to-r from-red-400 to-red-600">
              –ù–û–í–û–°–¢–ò
            </span>
          </h2>
          <p className="hero-jab-text text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto leading-relaxed">
            –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –º–∏—Ä–µ JAB
          </p>
        </div>

        {/* –§–∏–ª—å—Ç—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
        <div className="flex flex-wrap justify-center gap-4 mb-12">
          {categories.map((category) => (
            <button
              key={category.id}
              onClick={() => setSelectedCategory(category.id)}
              className={`px-6 py-3 rounded-full border transition-all duration-300 hero-jab-text cursor-glove ${
                selectedCategory === category.id
                  ? 'bg-red-500/20 text-red-300 border-red-500/50'
                  : 'bg-transparent text-gray-300 border-gray-600/50 hover:border-red-500/30 hover:text-red-300'
              }`}
            >
              {category.name}
            </button>
          ))}
        </div>

        {/* –°–µ—Ç–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
          {filteredNews.map((news) => (
            <article
              key={news.id}
              className={`group bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-sm rounded-2xl border transition-all duration-300 cursor-glove overflow-hidden flex flex-col h-full ${
                news.isHot 
                  ? 'border-yellow-500/60 shadow-lg shadow-yellow-500/20 animate-pulse' 
                  : 'border-gray-700/50 hover:border-red-500/40'
              }`}
            >
              {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ */}
              <div className="relative h-48 overflow-hidden">
                <Image
                  src={news.image}
                  alt={news.title}
                  fill
                  className="object-cover"
                />
                <div className="absolute top-4 left-4">
                  <span className={`px-3 py-1 rounded-full text-xs font-medium border hero-jab-text ${getCategoryColor(news.category)}`}>
                    {news.category}
                  </span>
                </div>
                {/* –ì–æ—Ä—è—á–∞—è –Ω–æ–≤–æ—Å—Ç—å - –±–µ–π–¥–∂ */}
                {news.isHot && (
                  <div className="absolute top-4 right-4 bg-gradient-to-r from-red-500 to-orange-500 text-white px-3 py-1 rounded-full text-xs font-bold uppercase tracking-wider hero-jab-text animate-bounce">
                    üî• –ì–û–†–Ø–ß–ê–Ø
                  </div>
                )}
              </div>

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–æ–≤–æ—Å—Ç–∏ */}
              <div className="p-6 flex flex-col h-full">
                {/* –î–∞—Ç–∞ –∏ –∞–≤—Ç–æ—Ä */}
                <div className="flex items-center justify-between text-sm text-gray-400 mb-3">
                  <span className="hero-jab-text">{formatDate(news.date)}</span>
                  <span className="hero-jab-text">{news.author}</span>
                </div>

                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                <h3 className="hero-jab-text text-xl font-bold text-white mb-3 group-hover:text-red-300 transition-colors">
                  {news.title}
                </h3>

                {/* –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ */}
                <p className="hero-jab-text text-gray-300 leading-relaxed mb-4 flex-grow">
                  {news.excerpt}
                </p>

                {/* –†–µ–∞–∫—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π */}
                {news.reactions && (
                  <div className="flex items-center gap-4 mb-4">
                    <button
                      onClick={() => handleReaction(news.id, 'like')}
                      className={`flex items-center gap-1 px-2 py-1 rounded-full transition-colors duration-200 cursor-glove min-w-[60px] border ${
                        userReactions[news.id] === 'like' 
                          ? 'bg-blue-500/20 border-blue-500/50' 
                          : 'bg-transparent border-transparent hover:bg-gray-700/30'
                      }`}
                    >
                      <span className={`text-lg transition-transform duration-200 ${
                        userReactions[news.id] === 'like' ? 'scale-125' : ''
                      }`}>üëç</span>
                      <span className={`hero-jab-text text-sm transition-colors ${
                        userReactions[news.id] === 'like' ? 'text-blue-300' : 'text-gray-300'
                      }`}>{news.reactions.like}</span>
                    </button>
                    
                    <button
                      onClick={() => handleReaction(news.id, 'love')}
                      className={`flex items-center gap-1 px-2 py-1 rounded-full transition-colors duration-200 cursor-glove min-w-[60px] border ${
                        userReactions[news.id] === 'love' 
                          ? 'bg-red-500/20 border-red-500/50' 
                          : 'bg-transparent border-transparent hover:bg-gray-700/30'
                      }`}
                    >
                      <span className={`text-lg transition-transform duration-200 ${
                        userReactions[news.id] === 'love' ? 'scale-125' : ''
                      }`}>‚ù§Ô∏è</span>
                      <span className={`hero-jab-text text-sm transition-colors ${
                        userReactions[news.id] === 'love' ? 'text-red-300' : 'text-gray-300'
                      }`}>{news.reactions.love}</span>
                    </button>
                    
                    <button
                      onClick={() => handleReaction(news.id, 'fire')}
                      className={`flex items-center gap-1 px-2 py-1 rounded-full transition-colors duration-200 cursor-glove min-w-[60px] border ${
                        userReactions[news.id] === 'fire' 
                          ? 'bg-orange-500/20 border-orange-500/50' 
                          : 'bg-transparent border-transparent hover:bg-gray-700/30'
                      }`}
                    >
                      <span className={`text-lg transition-transform duration-200 ${
                        userReactions[news.id] === 'fire' ? 'scale-125' : ''
                      }`}>üî•</span>
                      <span className={`hero-jab-text text-sm transition-colors ${
                        userReactions[news.id] === 'fire' ? 'text-orange-300' : 'text-gray-300'
                      }`}>{news.reactions.fire}</span>
                    </button>
                    
                    <button
                      onClick={() => handleReaction(news.id, 'clap')}
                      className={`flex items-center gap-1 px-2 py-1 rounded-full transition-colors duration-200 cursor-glove min-w-[60px] border ${
                        userReactions[news.id] === 'clap' 
                          ? 'bg-yellow-500/20 border-yellow-500/50' 
                          : 'bg-transparent border-transparent hover:bg-gray-700/30'
                      }`}
                    >
                      <span className={`text-lg transition-transform duration-200 ${
                        userReactions[news.id] === 'clap' ? 'scale-125' : ''
                      }`}>üëè</span>
                      <span className={`hero-jab-text text-sm transition-colors ${
                        userReactions[news.id] === 'clap' ? 'text-yellow-300' : 'text-gray-300'
                      }`}>{news.reactions.clap}</span>
                    </button>
                  </div>
                )}

                {/* –ö–Ω–æ–ø–∫–∞ "–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ" */}
                <div className="mt-auto">
                  <button
                    onClick={() => setSelectedNews(selectedNews === news.id ? null : news.id)}
                    className="text-red-400 hover:text-red-300 font-semibold hero-jab-text transition-colors cursor-glove"
                  >
                    {selectedNews === news.id ? '–°–∫—Ä—ã—Ç—å' : '–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ'} ‚Üí
                  </button>
                </div>

                {/* –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç (—Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ) */}
                {selectedNews === news.id && (
                  <div className="mt-4 pt-4 border-t border-gray-700/50">
                    <p className="hero-jab-text text-gray-300 leading-relaxed">
                      {news.content}
                    </p>
                  </div>
                )}
              </div>
            </article>
          ))}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ "–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏" */}
        <div className="text-center mt-12">
          <button className="bg-red-500 hover:bg-red-600 text-white px-8 py-4 rounded-xl font-bold uppercase tracking-wider transition-all duration-300 hero-jab-text cursor-glove">
            –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏
          </button>
        </div>
      </div>
    </section>
  );
}
