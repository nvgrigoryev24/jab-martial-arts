'use client';

import { useEffect, useState } from 'react';
import { getTrainers, Trainer } from '@/lib/pocketbase';

export default function TrainersSection() {
  const [trainers, setTrainers] = useState<Trainer[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    console.log('Loading mock trainers data...');
    
    const mockData = [
      {
        id: '1',
        name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
        specialization: '–ë–æ–∫—Å, –ú–ú–ê',
        experience: 12,
        description: '–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ –±–æ–∫—Å—É, —á–µ–º–ø–∏–æ–Ω –†–æ—Å—Å–∏–∏. –û–ø—ã—Ç —Ç—Ä–µ–Ω–µ—Ä—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã 8 –ª–µ—Ç. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏–∫–µ —É–¥–∞—Ä–æ–≤ –∏ —Ç–∞–∫—Ç–∏–∫–µ –≤–µ–¥–µ–Ω–∏—è –±–æ—è.',
        photo: '/trainer1.jpg',
        achievements: [
          '–ß–µ–º–ø–∏–æ–Ω –†–æ—Å—Å–∏–∏ –ø–æ –±–æ–∫—Å—É 2018-2020',
          '–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞',
          '–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä WBC',
          '–ë–æ–ª–µ–µ 200 —É—á–µ–Ω–∏–∫–æ–≤'
        ],
        created: '',
        updated: ''
      },
      {
        id: '2',
        name: '–ê–ª–µ–∫—Å–µ–π –°–∏–¥–æ—Ä–æ–≤',
        specialization: '–ú–ú–ê, –ö–∏–∫–±–æ–∫—Å–∏–Ω–≥',
        experience: 10,
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ–µ—Ü –ú–ú–ê, —É—á–∞—Å—Ç–Ω–∏–∫ —Ç—É—Ä–Ω–∏—Ä–æ–≤ UFC. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å–º–µ—à–∞–Ω–Ω—ã—Ö –µ–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞—Ö –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è–º.',
        photo: '/trainer2.jpg',
        achievements: [
          '–£—á–∞—Å—Ç–Ω–∏–∫ —Ç—É—Ä–Ω–∏—Ä–æ–≤ UFC',
          '–ß–µ–º–ø–∏–æ–Ω –ï–≤—Ä–æ–ø—ã –ø–æ –ú–ú–ê',
          '–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ –∫–∏–∫–±–æ–∫—Å–∏–Ω–≥—É',
          '–û–ø—ã—Ç –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å–ø–æ—Ä—Ç–µ 10 –ª–µ—Ç'
        ],
        created: '',
        updated: ''
      },
      {
        id: '3',
        name: '–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞',
        specialization: '–ö–∏–∫–±–æ–∫—Å–∏–Ω–≥, –§–∏—Ç–Ω–µ—Å',
        experience: 8,
        description: '–ß–µ–º–ø–∏–æ–Ω–∫–∞ –º–∏—Ä–∞ –ø–æ –∫–∏–∫–±–æ–∫—Å–∏–Ω–≥—É, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∂–µ–Ω—Å–∫–æ–º—É —Ñ–∏—Ç–Ω–µ—Å—É. –ü–æ–º–æ–≥–∞–µ—Ç –¥–µ–≤—É—à–∫–∞–º –æ–±—Ä–µ—Å—Ç–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ —á–µ—Ä–µ–∑ —Å–ø–æ—Ä—Ç.',
        photo: '/trainer3.jpg',
        achievements: [
          '–ß–µ–º–ø–∏–æ–Ω–∫–∞ –º–∏—Ä–∞ –ø–æ –∫–∏–∫–±–æ–∫—Å–∏–Ω–≥—É 2021',
          '–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞',
          '–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –ø–æ —Ñ–∏—Ç–Ω–µ—Å—É',
          '–ê–≤—Ç–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã "–ñ–µ–Ω—Å–∫–∏–π –±–æ–∫—Å"'
        ],
        created: '',
        updated: ''
      },
      {
        id: '4',
        name: '–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤',
        specialization: '–ë–æ–∫—Å, –°–∞–º–æ–æ–±–æ—Ä–æ–Ω–∞',
        experience: 15,
        description: '–í–µ—Ç–µ—Ä–∞–Ω —Å–ø–æ—Ä—Ç–∞, —Ç—Ä–µ–Ω–µ—Ä —Å –±–æ–ª—å—à–∏–º –æ–ø—ã—Ç–æ–º. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å–∞–º–æ–æ–±–æ—Ä–æ–Ω–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤.',
        photo: '/trainer4.jpg',
        achievements: [
          '–ó–∞—Å–ª—É–∂–µ–Ω–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –†–æ—Å—Å–∏–∏',
          '–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞ –ø–æ –±–æ–∫—Å—É',
          '–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —Å–∞–º–æ–æ–±–æ—Ä–æ–Ω–µ',
          '–û–ø—ã—Ç —Ç—Ä–µ–Ω–µ—Ä—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã 15 –ª–µ—Ç'
        ],
        created: '',
        updated: ''
      }
    ];

    setTrainers(mockData);
    setLoading(false);
    console.log('Mock trainers data loaded:', mockData.length, 'records');
  }, []);

  const getSpecializationColor = (specialization: string) => {
    if (specialization.includes('–ë–æ–∫—Å')) {
      return 'bg-red-500/20 text-red-300 border-red-500/30';
    } else if (specialization.includes('–ú–ú–ê')) {
      return 'bg-blue-500/20 text-blue-300 border-blue-500/30';
    } else if (specialization.includes('–ö–∏–∫–±–æ–∫—Å–∏–Ω–≥')) {
      return 'bg-purple-500/20 text-purple-300 border-purple-500/30';
    } else {
      return 'bg-gray-500/20 text-gray-300 border-gray-500/30';
    }
  };

  return (
    <section id="trainers" className="relative py-20 text-white overflow-hidden">
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute inset-0 overflow-hidden">
        {/* –ö—Ä–∞—Å–Ω—ã–µ –∏ —Å–∏–Ω–∏–µ –∞–∫—Ü–µ–Ω—Ç—ã */}
        <div className="absolute top-10 right-20 w-24 h-24 bg-red-600/15 rounded-full blur-2xl animate-pulse" style={{animationDelay: '2s'}}></div>
        <div className="absolute bottom-10 left-20 w-28 h-28 bg-blue-500/12 rounded-full blur-2xl animate-pulse" style={{animationDelay: '3s'}}></div>
        <div className="absolute top-1/3 right-1/3 w-20 h-20 bg-red-600/08 rounded-full blur-xl animate-pulse" style={{animationDelay: '1.5s'}}></div>
        
        {/* –ë–µ–ª—ã–µ –ª–∏–Ω–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è */}
        <div className="absolute top-16 right-32 w-12 h-0.5 bg-white/15 transform rotate-45"></div>
        <div className="absolute bottom-16 left-32 w-16 h-0.5 bg-white/15 transform -rotate-45"></div>
        <div className="absolute top-1/2 left-10 w-8 h-0.5 bg-white/10 transform rotate-45"></div>
      </div>
      
      <div className="container mx-auto px-4 relative z-10">
        <div className="max-w-7xl mx-auto">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
          <div className="text-center mb-16">
            <h2 className="hero-jab-title text-4xl md:text-6xl font-bold text-white mb-6">
              <span className="text-transparent bg-clip-text bg-gradient-to-r from-red-400 to-red-600">
                –ù–ê–®–ò –¢–†–ï–ù–ï–†–´
              </span>
            </h2>
            <p className="hero-jab-text text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto leading-relaxed">
              –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ï–ù–ï–†–´ –° –ë–û–õ–¨–®–ò–ú –û–ü–´–¢–û–ú. 
              –ö–ê–ñ–î–´–ô –ò–ó –ù–ê–° - –ú–ê–°–¢–ï–† –°–í–û–ï–ì–û –î–ï–õ–ê
            </p>
          </div>

          {/* –ö–∞—Ä—Ç–æ—á–∫–∏ —Ç—Ä–µ–Ω–µ—Ä–æ–≤ */}
          {loading ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {[1, 2, 3, 4].map((i) => (
                <div key={i} className="bg-white/10 rounded-2xl p-6 animate-pulse">
                  <div className="w-full h-64 bg-white/20 rounded-xl mb-4"></div>
                  <div className="h-6 bg-white/20 rounded mb-2"></div>
                  <div className="h-4 bg-white/20 rounded mb-2"></div>
                  <div className="h-4 bg-white/20 rounded mb-4"></div>
                  <div className="space-y-2">
                    <div className="h-3 bg-white/20 rounded"></div>
                    <div className="h-3 bg-white/20 rounded"></div>
                    <div className="h-3 bg-white/20 rounded"></div>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {trainers.map((trainer, index) => (
                <div 
                  key={trainer.id} 
                  className="group relative bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-sm rounded-2xl p-6 border border-red-500/20 hover:border-red-500/40 transition-all duration-300 hover:transform hover:scale-105 hover:shadow-2xl hover:shadow-red-500/20 cursor-glove flex flex-col h-full"
                  style={{animationDelay: `${index * 0.1}s`}}
                >
                  {/* –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
                  <div className="absolute inset-0 bg-gradient-to-br from-red-500/5 to-transparent rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                  
                  <div className="relative z-10 flex flex-col h-full">
                    {/* –§–æ—Ç–æ —Ç—Ä–µ–Ω–µ—Ä–∞ */}
                    <div className="w-full h-64 bg-gradient-to-br from-gray-800 to-gray-900 rounded-xl mb-4 flex items-center justify-center group-hover:animate-pulse">
                      <div className="w-24 h-24 bg-gradient-to-br from-red-500 to-red-600 rounded-full flex items-center justify-center">
                        <span className="text-4xl">ü•ä</span>
                      </div>
                    </div>
                    
                    {/* –ò–º—è –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è */}
                    <h3 className="hero-jab-text text-xl font-bold text-white mb-2 group-hover:text-red-300 transition-colors">
                      {trainer.name}
                    </h3>
                    
                    <div className={`inline-block px-3 py-1 rounded-full text-xs font-medium border hero-jab-text ${getSpecializationColor(trainer.specialization)} mb-3`}>
                      {trainer.specialization}
                    </div>
                    
                    {/* –û–ø—ã—Ç */}
                    <div className="hero-jab-text text-sm text-gray-400 mb-3">
                      –û–ø—ã—Ç: {trainer.experience} –ª–µ—Ç
                    </div>
                    
                    {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                    <p className="hero-jab-text text-gray-300 text-sm leading-relaxed mb-4 flex-grow">
                      {trainer.description}
                    </p>
                    
                    {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
                    <div className="space-y-2">
                      <h4 className="hero-jab-text text-sm font-semibold text-red-400">
                        –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:
                      </h4>
                      <ul className="space-y-1">
                        {trainer.achievements.slice(0, 2).map((achievement, idx) => (
                          <li key={idx} className="hero-jab-text text-xs text-gray-400 flex items-start">
                            <span className="text-red-500 mr-2">‚Ä¢</span>
                            {achievement}
                          </li>
                        ))}
                        {trainer.achievements.length > 2 && (
                          <li className="hero-jab-text text-xs text-gray-500">
                            +{trainer.achievements.length - 2} –¥—Ä—É–≥–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
                          </li>
                        )}
                      </ul>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="mt-16 text-center">
            <div className="bg-black/40 backdrop-blur-sm rounded-2xl p-8 border border-red-500/20">
              <h3 className="hero-jab-text text-2xl font-bold text-white mb-4">
                –•–û–¢–ò–¢–ï –ó–ê–ù–ò–ú–ê–¢–¨–°–Ø –° –ù–ê–®–ò–ú–ò –¢–†–ï–ù–ï–†–ê–ú–ò?
              </h3>
              <p className="hero-jab-text text-gray-300 mb-6 max-w-2xl mx-auto">
                –ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø–µ—Ä–≤—É—é –±–µ—Å–ø–ª–∞—Ç–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∏ –ø–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ —Ç—Ä–µ–Ω–µ—Ä–∞–º–∏ –ª–∏—á–Ω–æ
              </p>
              <button className="btn-jab bg-gradient-to-r from-red-600 to-red-700 hover:from-red-500 hover:to-red-600 text-white px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 transform hover:scale-105 hover:shadow-xl cursor-glove hero-jab-text">
                –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
              </button>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
