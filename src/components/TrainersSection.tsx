'use client';

import { useEffect, useState, useRef } from 'react';
import { getTrainers, Trainer, getImageUrl } from '@/lib/pocketbase';
import TrainerModal from './TrainerModal';

export default function TrainersSection() {
  const [trainers, setTrainers] = useState<Trainer[]>([]);
  const [loading, setLoading] = useState(true);
  const [selectedTrainer, setSelectedTrainer] = useState<Trainer | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const isLoadingRef = useRef(false);

  useEffect(() => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥–≤–æ–π–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    if (isLoadingRef.current) return;
    
    const abortController = new AbortController();
    isLoadingRef.current = true;
    
    const loadTrainers = async () => {
      try {
        const trainersData = await getTrainers(abortController.signal);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω
        if (!abortController.signal.aborted) {
          setTrainers(trainersData);
        }
      } catch (error) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞
        if (error.name === 'AbortError' || error.message?.includes('autocancelled')) {
          return;
        }
        // Fallback to empty array if PocketBase is not available
        if (!abortController.signal.aborted) {
          setTrainers([]);
        }
      } finally {
        if (!abortController.signal.aborted) {
          setLoading(false);
          isLoadingRef.current = false;
        }
      }
    };

    loadTrainers();
    
    // Cleanup function –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      abortController.abort();
      isLoadingRef.current = false;
    };
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  const openModal = (trainer: Trainer) => {
    setSelectedTrainer(trainer);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setSelectedTrainer(null);
  };

  const getSpecializationColor = (specialization: string) => {
    if (specialization.includes('–ë–æ–∫—Å')) {
      return 'bg-red-500/20 text-red-300 border-red-500/30';
    } else if (specialization.includes('–ú–ú–ê')) {
      return 'bg-blue-500/20 text-blue-300 border-blue-500/30';
    } else if (specialization.includes('–ö–∏–∫–±–æ–∫—Å–∏–Ω–≥')) {
      return 'bg-purple-500/20 text-purple-300 border-purple-500/30';
    } else {
      return 'bg-gray-500/20 text-gray-300 border-gray-500/30';
    }
  };

  return (
    <section id="coaches" className="relative py-12 sm:py-16 md:py-20 text-white overflow-hidden">
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute inset-0 overflow-hidden">
        {/* –ö—Ä–∞—Å–Ω—ã–µ –∏ —Å–∏–Ω–∏–µ –∞–∫—Ü–µ–Ω—Ç—ã - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã */}
        <div className="absolute top-6 sm:top-10 right-8 sm:right-20 w-16 h-16 sm:w-24 sm:h-24 bg-red-600/15 rounded-full blur-2xl animate-pulse" style={{animationDelay: '2s'}}></div>
        <div className="absolute bottom-6 sm:bottom-10 left-8 sm:left-20 w-20 h-20 sm:w-28 sm:h-28 bg-blue-500/12 rounded-full blur-2xl animate-pulse" style={{animationDelay: '3s'}}></div>
        <div className="absolute top-1/3 right-1/4 sm:right-1/3 w-12 h-12 sm:w-20 sm:h-20 bg-red-600/08 rounded-full blur-xl animate-pulse" style={{animationDelay: '1.5s'}}></div>
        
        {/* –ë–µ–ª—ã–µ –ª–∏–Ω–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ */}
        <div className="absolute top-12 sm:top-16 right-16 sm:right-32 w-6 h-0.5 sm:w-12 sm:h-0.5 bg-white/15 transform rotate-45"></div>
        <div className="absolute bottom-12 sm:bottom-16 left-16 sm:left-32 w-8 h-0.5 sm:w-16 sm:h-0.5 bg-white/15 transform -rotate-45"></div>
        <div className="absolute top-1/2 left-4 sm:left-10 w-4 h-0.5 sm:w-8 sm:h-0.5 bg-white/10 transform rotate-45"></div>
      </div>
      
      <div className="container mx-auto px-4 relative z-10">
        <div className="max-w-7xl mx-auto">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
          <div className="text-center mb-12 sm:mb-16">
            <h2 className="hero-jab-title text-3xl sm:text-4xl md:text-6xl font-bold text-white mb-4 sm:mb-6">
              <span className="text-transparent bg-clip-text bg-gradient-to-r from-red-400 to-red-600">
                –ù–ê–®–ò –¢–†–ï–ù–ï–†–´
              </span>
            </h2>
            <p className="hero-jab-text text-lg sm:text-xl md:text-2xl text-gray-300 max-w-4xl mx-auto leading-relaxed px-4">
              –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ï–ù–ï–†–´ –° –ë–û–õ–¨–®–ò–ú –û–ü–´–¢–û–ú. 
              –ö–ê–ñ–î–´–ô –ò–ó –ù–ê–° - –ú–ê–°–¢–ï–† –°–í–û–ï–ì–û –î–ï–õ–ê
            </p>
          </div>

          {/* –ö–∞—Ä—Ç–æ—á–∫–∏ —Ç—Ä–µ–Ω–µ—Ä–æ–≤ */}
          {loading ? (
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6 md:gap-8">
              {[1, 2, 3, 4].map((i) => (
                <div key={i} className="bg-white/10 rounded-2xl p-4 sm:p-6 animate-pulse">
                  <div className="w-full h-48 sm:h-56 md:h-64 bg-white/20 rounded-xl mb-3 sm:mb-4"></div>
                  <div className="h-5 sm:h-6 bg-white/20 rounded mb-2"></div>
                  <div className="h-3 sm:h-4 bg-white/20 rounded mb-2"></div>
                  <div className="h-3 sm:h-4 bg-white/20 rounded mb-3 sm:mb-4"></div>
                  <div className="space-y-1.5 sm:space-y-2">
                    <div className="h-2.5 sm:h-3 bg-white/20 rounded"></div>
                    <div className="h-2.5 sm:h-3 bg-white/20 rounded"></div>
                    <div className="h-2.5 sm:h-3 bg-white/20 rounded"></div>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <>
              {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
              <div className="block sm:hidden space-y-4">
              {trainers.map((trainer, index) => (
                <div 
                  key={trainer.id} 
                  className="group relative bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-sm rounded-2xl p-4 border border-red-500/20 hover:border-red-500/40 transition-all duration-300 hover:transform hover:scale-105 hover:shadow-2xl hover:shadow-red-500/20 cursor-pointer flex min-h-36"
                  style={{animationDelay: `${index * 0.1}s`}}
                  onClick={() => openModal(trainer)}
                >
                  {/* –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
                  <div className="absolute inset-0 bg-gradient-to-br from-red-500/5 to-transparent rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                  
                  <div className="relative z-10 flex w-full items-center">
                    {/* –§–æ—Ç–æ —Ç—Ä–µ–Ω–µ—Ä–∞ - —Å–ª–µ–≤–∞ */}
                    <div className="w-24 h-24 bg-gradient-to-br from-gray-800 to-gray-900 rounded-xl mr-4 flex-shrink-0 flex items-center justify-center group-hover:animate-pulse overflow-hidden">
                      {trainer.photo ? (
                        <img 
                          src={getImageUrl(trainer, trainer.photo)} 
                          alt={trainer.name}
                          className="w-full h-full object-cover rounded-xl"
                        />
                      ) : (
                        <div className="w-12 h-12 bg-gradient-to-br from-red-500 to-red-600 rounded-full flex items-center justify-center">
                          <span className="text-xl">ü•ä</span>
                        </div>
                      )}
                    </div>
                    
                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - —Å–ø—Ä–∞–≤–∞ */}
                    <div className="flex flex-col flex-grow min-w-0">
                      {/* –ò–º—è */}
                      <h3 className="hero-jab-text text-base font-bold text-white mb-2 group-hover:text-red-300 transition-colors">
                        {trainer.name}
                      </h3>
                      
                      {/* –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è */}
                      <div className={`inline-block px-2 py-1 rounded-full text-xs font-medium border hero-jab-text ${getSpecializationColor(trainer.specialization)} mb-2`}>
                        {trainer.specialization}
                      </div>
                      
                      {/* –û–ø—ã—Ç */}
                      <div className="hero-jab-text text-xs text-gray-400 mb-2">
                        –û–ø—ã—Ç: {trainer.experience_years} –ª–µ—Ç
                      </div>
                      
                      {/* –ö—Ä–∞—Ç–∫–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è */}
                      {trainer.short_bio && (
                        <div>
                          <p className="hero-jab-text text-gray-300 text-xs leading-relaxed line-clamp-2">
                            {trainer.short_bio}
                          </p>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
              </div>

            {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
            <div className="hidden sm:grid sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6 md:gap-8">
              {trainers.map((trainer, index) => (
                <div 
                  key={trainer.id} 
                  className="group relative bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-sm rounded-2xl p-4 sm:p-6 border border-red-500/20 hover:border-red-500/40 transition-all duration-300 hover:transform hover:scale-105 hover:shadow-2xl hover:shadow-red-500/20 cursor-pointer flex flex-col h-full"
                  style={{animationDelay: `${index * 0.1}s`}}
                  onClick={() => openModal(trainer)}
                >
                  {/* –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
                  <div className="absolute inset-0 bg-gradient-to-br from-red-500/5 to-transparent rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                  
                  <div className="relative z-10 flex flex-col h-full">
                    {/* –§–æ—Ç–æ —Ç—Ä–µ–Ω–µ—Ä–∞ */}
                    <div className="w-full h-40 md:h-56 lg:h-64 bg-gradient-to-br from-gray-800 to-gray-900 rounded-xl mb-2 sm:mb-3 md:mb-4 flex items-center justify-center group-hover:animate-pulse overflow-hidden">
                      {trainer.photo ? (
                        <img 
                          src={getImageUrl(trainer, trainer.photo)} 
                          alt={trainer.name}
                          className="w-full h-full object-cover rounded-xl"
                        />
                      ) : (
                        <div className="w-12 h-12 sm:w-16 sm:h-16 md:w-20 md:h-20 lg:w-24 lg:h-24 bg-gradient-to-br from-red-500 to-red-600 rounded-full flex items-center justify-center">
                          <span className="text-xl sm:text-2xl md:text-3xl lg:text-4xl">ü•ä</span>
                        </div>
                      )}
                    </div>
                    
                    {/* –ò–º—è –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è */}
                    <h3 className="hero-jab-text text-base sm:text-lg md:text-xl font-bold text-white mb-1 sm:mb-2 group-hover:text-red-300 transition-colors">
                      {trainer.name}
                    </h3>
                    
                    <div className={`inline-block px-2 sm:px-3 py-1 rounded-full text-xs font-medium border hero-jab-text ${getSpecializationColor(trainer.specialization)} mb-1 sm:mb-2`}>
                      {trainer.specialization}
                    </div>
                    
                    {/* –û–ø—ã—Ç */}
                    <div className="hero-jab-text text-xs sm:text-sm text-gray-400 mb-2 sm:mb-3">
                      –û–ø—ã—Ç: {trainer.experience_years} –ª–µ—Ç
                    </div>
                    
                    {/* –ö—Ä–∞—Ç–∫–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è */}
                    {trainer.short_bio && (
                      <div className="flex-grow mb-3 sm:mb-4">
                        <p className="hero-jab-text text-gray-300 text-xs sm:text-sm leading-relaxed line-clamp-3">
                          {trainer.short_bio}
                        </p>
                      </div>
                    )}
                    
                  </div>
                </div>
              ))}
              </div>

            </>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø–∏—Å–∏ */}
        <div className="text-center mt-8 sm:mt-12">
          <a 
            href="#contact" 
            className="btn-jab bg-gradient-to-r from-red-600 to-red-700 hover:from-red-500 hover:to-red-600 text-white px-6 sm:px-8 py-3 sm:py-4 rounded-lg font-semibold text-base sm:text-lg transition-all duration-300 transform hover:scale-105 hover:shadow-xl cursor-glove hero-jab-text w-full sm:w-auto inline-block text-center"
          >
            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
          </a>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ç—Ä–µ–Ω–µ—Ä–∞ */}
      <TrainerModal
        trainer={selectedTrainer}
        isOpen={isModalOpen}
        onClose={closeModal}
      />
    </section>
  );
}